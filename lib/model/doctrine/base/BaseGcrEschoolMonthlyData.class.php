<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GcrEschoolMonthlyData', 'doctrine');

/**
 * BaseGcrEschoolMonthlyData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $eschool_id
 * @property integer $month_value
 * @property integer $year_value
 * @property decimal $eschool_balance
 * @property decimal $eclassroom_balance
 * @property decimal $gross
 * @property decimal $gc_fee
 * @property decimal $seller_fee
 * @property integer $num_users
 * @property integer $num_courses
 * 
 * @method integer               getId()                 Returns the current record's "id" value
 * @method string                getEschoolId()          Returns the current record's "eschool_id" value
 * @method integer               getMonthValue()         Returns the current record's "month_value" value
 * @method integer               getYearValue()          Returns the current record's "year_value" value
 * @method decimal               getEschoolBalance()     Returns the current record's "eschool_balance" value
 * @method decimal               getEclassroomBalance()  Returns the current record's "eclassroom_balance" value
 * @method decimal               getGross()              Returns the current record's "gross" value
 * @method decimal               getGcFee()              Returns the current record's "gc_fee" value
 * @method decimal               getSellerFee()          Returns the current record's "seller_fee" value
 * @method integer               getNumUsers()           Returns the current record's "num_users" value
 * @method integer               getNumCourses()         Returns the current record's "num_courses" value
 * @method GcrEschoolMonthlyData setId()                 Sets the current record's "id" value
 * @method GcrEschoolMonthlyData setEschoolId()          Sets the current record's "eschool_id" value
 * @method GcrEschoolMonthlyData setMonthValue()         Sets the current record's "month_value" value
 * @method GcrEschoolMonthlyData setYearValue()          Sets the current record's "year_value" value
 * @method GcrEschoolMonthlyData setEschoolBalance()     Sets the current record's "eschool_balance" value
 * @method GcrEschoolMonthlyData setEclassroomBalance()  Sets the current record's "eclassroom_balance" value
 * @method GcrEschoolMonthlyData setGross()              Sets the current record's "gross" value
 * @method GcrEschoolMonthlyData setGcFee()              Sets the current record's "gc_fee" value
 * @method GcrEschoolMonthlyData setSellerFee()          Sets the current record's "seller_fee" value
 * @method GcrEschoolMonthlyData setNumUsers()           Sets the current record's "num_users" value
 * @method GcrEschoolMonthlyData setNumCourses()         Sets the current record's "num_courses" value
 * 
 * @package    globalclassroom
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGcrEschoolMonthlyData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gcr_eschool_monthly_data');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'gcr_eschool_monthly_data_id',
             'length' => 8,
             ));
        $this->hasColumn('eschool_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'default' => '',
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('month_value', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('year_value', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('eschool_balance', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('eclassroom_balance', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('gross', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('gc_fee', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('seller_fee', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('num_users', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_courses', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}