<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GcrPayoff', 'doctrine');

/**
 * BaseGcrPayoff
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $trans_time
 * @property integer $purchase_id
 * @property string $eschool_id
 * @property integer $user_id
 * @property integer $credentials_id
 * @property string $user_eschool_id
 * @property string $payoff_status
 * @property string $payoff_type
 * @property decimal $amount
 * @property string $recipient_name
 * @property integer $address
 * 
 * @method integer   getId()              Returns the current record's "id" value
 * @method integer   getTransTime()       Returns the current record's "trans_time" value
 * @method integer   getPurchaseId()      Returns the current record's "purchase_id" value
 * @method string    getEschoolId()       Returns the current record's "eschool_id" value
 * @method integer   getUserId()          Returns the current record's "user_id" value
 * @method integer   getCredentialsId()   Returns the current record's "credentials_id" value
 * @method string    getUserEschoolId()   Returns the current record's "user_eschool_id" value
 * @method string    getPayoffStatus()    Returns the current record's "payoff_status" value
 * @method string    getPayoffType()      Returns the current record's "payoff_type" value
 * @method decimal   getAmount()          Returns the current record's "amount" value
 * @method string    getRecipientName()   Returns the current record's "recipient_name" value
 * @method integer   getAddress()         Returns the current record's "address" value
 * @method GcrPayoff setId()              Sets the current record's "id" value
 * @method GcrPayoff setTransTime()       Sets the current record's "trans_time" value
 * @method GcrPayoff setPurchaseId()      Sets the current record's "purchase_id" value
 * @method GcrPayoff setEschoolId()       Sets the current record's "eschool_id" value
 * @method GcrPayoff setUserId()          Sets the current record's "user_id" value
 * @method GcrPayoff setCredentialsId()   Sets the current record's "credentials_id" value
 * @method GcrPayoff setUserEschoolId()   Sets the current record's "user_eschool_id" value
 * @method GcrPayoff setPayoffStatus()    Sets the current record's "payoff_status" value
 * @method GcrPayoff setPayoffType()      Sets the current record's "payoff_type" value
 * @method GcrPayoff setAmount()          Sets the current record's "amount" value
 * @method GcrPayoff setRecipientName()   Sets the current record's "recipient_name" value
 * @method GcrPayoff setAddress()         Sets the current record's "address" value
 * 
 * @package    globalclassroom
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGcrPayoff extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gcr_payoff');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'gcr_payoff_id',
             'length' => 8,
             ));
        $this->hasColumn('trans_time', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('purchase_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('eschool_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'default' => '',
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('credentials_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_eschool_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'default' => '',
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('payoff_status', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'pending',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('payoff_type', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('amount', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('recipient_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('address', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}