<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GcrUserStorageS3', 'doctrine');

/**
 * BaseGcrUserStorageS3
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $app_id
 * @property string $bucket_name
 * @property integer $account_id
 * 
 * @method integer          getId()          Returns the current record's "id" value
 * @method string           getAppId()       Returns the current record's "app_id" value
 * @method string           getBucketName()  Returns the current record's "bucket_name" value
 * @method integer          getAccountId()   Returns the current record's "account_id" value
 * @method GcrUserStorageS3 setId()          Sets the current record's "id" value
 * @method GcrUserStorageS3 setAppId()       Sets the current record's "app_id" value
 * @method GcrUserStorageS3 setBucketName()  Sets the current record's "bucket_name" value
 * @method GcrUserStorageS3 setAccountId()   Sets the current record's "account_id" value
 * 
 * @package    globalclassroom
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGcrUserStorageS3 extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gcr_user_storage_s3');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'gcr_user_storage_s3_id',
             'length' => 8,
             ));
        $this->hasColumn('app_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('bucket_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('account_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}