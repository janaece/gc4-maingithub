<?php

/**
 * Trial
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    globalclassroom
 * @subpackage model
 * @author     Justin England
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class GcrTrial extends BaseGcrTrial
{
    public function getDaysRemaining()
    {
        $exp_ts = $this->getExpirationTime($this->start_date, $this->getLength());
        $days = ceil(($exp_ts - time()) / (60 * 60 * 24));

        return $days;
    }
    public function getInstitution()
    {
        if ($institution = Doctrine::getTable('GcrInstitution')->find($this->organization_id))
        {
            return $institution;
        }
        else
        {
            global $CFG;
            $CFG->current_app->gcError('Trial ID ' . $this->id . ' has a non-existant organization_id reference.', 'gcdatabaseerror');
        }
    }
    public function getExpirationTime()
    {
        $trialPeriod = $this->getLength() * (60 * 60 * 24);
        $trialExpire = $this->start_date + $trialPeriod;
        $trial_expire_timestamp = mktime(23, 59, 59, date('n', $trialExpire), date('j', $trialExpire), date('Y', $trialExpire));

        return $trial_expire_timestamp;
    }
    public function getInfo()
    {
        global $CFG;
        $trialDays = $this->getDaysRemaining();
        $data = '';
        if ($trialDays > 0)
        {
            $dayString = 'days';

            if ($trialDays == 1)
            {
                $dayString = 'day';
            }
            else
            {
                $trialDays -= 1;
            }

            $data .= '<div id="trialStatusInfo"><small>The trial period for this eSchool will expire in ' . $trialDays . ' ' . $dayString . '.';
        }
        else
        {
            $data .= '<div id="trialStatusInfo" style="color:red"><small>The trial period for this eSchool is expired.';
        }

        $data .= ' To purchase this eSchool, <a href="' . $this->getInstitution()->getUrl() . '/eschool/activation">click here</a></small></div>';

        return $data;
    }
    public function getLength()
    {
        return gcr::trialLengthInDays;
    }
    public function end($ts = null)
    {
        if (!$ts)
        {
            $ts = time();
        }
        $this->end_date = $ts;
        $this->save();
    }
    public function isActive()
    {
        if ($this->end_date == 0 || $this->end_date < time())
        {
            return true;
        }
        return false;
    }
    public function restart($ts = null)
    {
        if (!$ts)
        {
            $ts = time();
        }
        $this->start_date = $ts;
        $this->end_date = 0;
        $this->save();
    }
}
