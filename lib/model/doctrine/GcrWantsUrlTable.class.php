<?php

/**
 * GcrWantsUrlTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class GcrWantsUrlTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object GcrWantsUrlTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('GcrWantsUrl');
    }
    public static function getRedirectUrl($id, $delete_record = false)
    {
        if ($wants_url = self::getInstance()->find($id))
        {
            $url = $wants_url->getRedirectUrl();
            if ($delete_record)
            {
                $wants_url->delete();
            }
            return $url;
        }
        return false;
    }
    public static function clearOutdated()
    {
        // clear anything older than one month
        self::getInstance()->createQuery('w')->delete()
                ->where('w.time_created < ?', time() - 24*60*60*30)
                ->execute();
    }
    public static function createWantsUrl($redirect_type, $app, $url = false)
    {
        $wants_url = '';
        if (!$url)
        {
            $url = $_SERVER['REQUEST_URI'];
        }
        if ($cookie = GcrWantsUrlType::getCookie())
        {
            $wants_url = self::getInstance()->find($cookie);
            if (!$wants_url)
            {
                GcrWantsUrlType::unsetCookie();
            }
        }
        if (!$wants_url)
        {
            $wants_url = new GcrWantsUrl();
        }
        $wants_url->setAppId($app->getShortName());
        $wants_url->setTimeCreated(time());
        $wants_url->setWantsUrl($url);
        $wants_url->setTypeStrategy($redirect_type);
        $wants_url->save();
        $wants_url->getTypeStrategy()->setCookie();
        return $wants_url;
    }
    public static function handleRequest()
    {
        self::clearOutdated();
        if (isset($_GET[GcrWantsUrlType::KEY]))
        {
            if ($wants_url = self::getInstance()->find($_GET[GcrWantsUrlType::KEY]))
            {
                $wants_url->getTypeStrategy()->handleRequest();
            }
        }
        self::checkForWantsUrlPost();
        if ($cookie = GcrWantsUrlType::getCookie())
        {
            if (!isset($wants_url) || !$wants_url || $cookie != $wants_url->getId())
            {
                if ($wants_url = self::getInstance()->find($cookie))
                {
                    $wants_url->getTypeStrategy()->handleRequest();
                }
            }
        }
    }
    public static function checkForWantsUrlPost()
    {
        if (isset($_POST[GcrWantsUrlType::KEY]))
        {
            global $CFG;
            if (isset($_POST[GcrWantsUrlType::TYPE]))
            {
                $strategy = $_POST[GcrWantsUrlType::TYPE];
            }
            else
            {
                $strategy = GcrWantsUrlType::DEFAULT_TYPE;
            }
            $wants_url = self::createWantsUrl($strategy, $CFG->current_app,
                    htmlspecialchars_decode($_POST[GcrWantsUrlType::KEY]));
        }
    }
}