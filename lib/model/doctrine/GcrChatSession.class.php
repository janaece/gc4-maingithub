<?php

/**
 * GcrChatSession
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    globalclassroom
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class GcrChatSession extends BaseGcrChatSession
{
    public function inviteUser($mhr_user, $from_mhr_user)
    {
        $invite = new GcrChatSessionInvite();
        $invite->setTimeCreated(time());
        $invite->setSessionId($this->id);
        $invite->setUserId($mhr_user->getObject()->id);
        $invite->setUserEschoolId($mhr_user->getApp()->getShortName());
        $invite->setFromUserId($from_mhr_user->getObject()->id);
        $invite->setFromUserEschoolId($from_mhr_user->getApp()->getShortName());
        $invite->save();
    }
    public function getApp()
    {
        return Doctrine::getTable('GcrInstitution')->findOneByShortName($this->eschool_id);
    }
    public function authorizeUser($mhr_user)
    {
        if (!$user_session = $this->getSessionUser($mhr_user))
        {
            if ($user_invite = $this->getInvite($mhr_user))
            {
                $user_invite->createUserSession($mhr_user);
            }
            else
            {
                return false;
            }
        }
        $this->deleteUserInvites($mhr_user);
        return true;
    }
    public function createUserSession($mhr_user)
    {
        $chat_session_users = new GcrChatSessionUsers();
        $chat_session_users->setUserId($mhr_user->getObject()->id);
        $chat_session_users->setSessionId($this->id);
        $chat_session_users->setUserEschoolId($mhr_user->getApp()->getShortName());
        $chat_session_users->setTimeCreated(time());
        $chat_session_users->save();
    }
    public function deleteUserInvites($mhr_user)
    {
        GcrChatSessionInviteTable::getInstance()->createQuery('c')->delete()
                ->where('c.user_id = ?', $mhr_user->getObject()->id)
                ->andWhere('c.user_eschool_id = ?', $mhr_user->getApp()->getShortName())
                ->andWhere('c.session_id = ?', $this->id)
                ->execute();
    }
    public function getSessionUser($mhr_user = false)
    {
        if ($mhr_user)
        {
            return GcrChatSessionUsersTable::getInstance()->createQuery('c')
                ->where('c.user_id = ?', $mhr_user->getObject()->id)
                ->andWhere('c.user_eschool_id = ?', $mhr_user->getApp()->getShortName())
                ->andWhere('c.session_id = ?', $this->id)
                ->fetchOne();
        }
        else
        {
            return GcrChatSessionUsersTable::getInstance()->findBySessionId($this->id);
        }
    }
    public function getInvite($mhr_user = false)
    {
        if ($mhr_user)
        {
            return GcrChatSessionInviteTable::getInstance()->createQuery('c')
                ->where('c.user_id = ?', $mhr_user->getObject()->id)
                ->andWhere('c.user_eschool_id = ?', $mhr_user->getApp()->getShortName())
                ->andWhere('c.session_id = ?', $this->id)
                ->fetchOne();
        }
        else
        {
            return GcrChatSessionInviteTable::getInstance()->findBySessionId($this->id);
        }
    }
    public function getPendingInvites()
    {
        $pending_invites = array();
        foreach ($this->getInvite() as $invite)
        {
            if ($user = $invite->getUser())
            {
                if ($user->isLoggedIn())
                {
                    $pending_invites[] = $invite;
                    continue;
                }
            }
            $invite->delete();
        }
        return $pending_invites;
    }
}
